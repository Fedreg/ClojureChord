{:rename-macros {}, :renames {}, :externs {alert {}, parseInt {}, setTimeout {}}, :use-macros {}, :excludes #{}, :name tabber.songViewer, :imports nil, :requires {tabber.colorThemes tabber.colorThemes, tabber.chordChart tabber.chordChart, color tabber.colorThemes, tabber.state tabber.state, state tabber.state, s cljs.spec.alpha, chart tabber.chordChart, str clojure.string, clojure.string clojure.string, cljs.spec.alpha cljs.spec.alpha}, :cljs.spec/speced-vars [], :uses nil, :defs {Tempo {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 109, :column 7, :end-line 109, :end-column 12, :arglists (quote ([]))}, :name tabber.songViewer/Tempo, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, TempoButtonStyle {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 73, :column 7, :end-line 73, :end-column 23, :arglists (quote ([]))}, :name tabber.songViewer/TempoButtonStyle, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, SongTitleStyle {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 56, :column 7, :end-line 56, :end-column 21, :arglists (quote ([]))}, :name tabber.songViewer/SongTitleStyle, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, StartButtonStyle {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 62, :column 7, :end-line 62, :end-column 23, :arglists (quote ([]))}, :name tabber.songViewer/StartButtonStyle, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, BeatCounterStyle {:name tabber.songViewer/BeatCounterStyle, :file "src/tabber/song-viewer.cljs", :line 20, :column 1, :end-line 20, :end-column 22, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 20, :column 6, :end-line 20, :end-column 22}, :tag cljs.core/IMap}, SongTitle {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 168, :column 7, :end-line 168, :end-column 16, :arglists (quote ([]))}, :name tabber.songViewer/SongTitle, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, GetReadyStyle {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 35, :column 7, :end-line 35, :end-column 20, :arglists (quote ([]))}, :name tabber.songViewer/GetReadyStyle, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, SongChordFilter {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 141, :column 7, :end-line 141, :end-column 22, :arglists (quote ([collection thisSong thisIndex]))}, :name tabber.songViewer/SongChordFilter, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 22, :method-params ([collection thisSong thisIndex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 3, :fn-var true, :arglists (quote ([collection thisSong thisIndex]))}, FormatSong {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 95, :column 7, :end-line 95, :end-column 17, :arglists (quote ([songInfo]))}, :name tabber.songViewer/FormatSong, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 17, :method-params ([songInfo]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([songInfo]))}, OnDeckChordStyle {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 41, :column 7, :end-line 41, :end-column 23, :arglists (quote ([upper]))}, :name tabber.songViewer/OnDeckChordStyle, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 23, :method-params ([upper]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([upper]))}, BeatCounter {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 127, :column 7, :end-line 127, :end-column 18, :arglists (quote ([]))}, :name tabber.songViewer/BeatCounter, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, SongPage {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 193, :column 7, :end-line 193, :end-column 15, :arglists (quote ([]))}, :name tabber.songViewer/SongPage, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, OnDeckChord {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 161, :column 7, :end-line 161, :end-column 18, :arglists (quote ([num upper]))}, :name tabber.songViewer/OnDeckChord, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 18, :method-params ([num upper]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 2, :fn-var true, :arglists (quote ([num upper]))}, ChordPreviewListStyle {:name tabber.songViewer/ChordPreviewListStyle, :file "src/tabber/song-viewer.cljs", :line 47, :column 1, :end-line 47, :end-column 27, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 47, :column 6, :end-line 47, :end-column 27}, :tag cljs.core/IMap}, CurrentChord {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 155, :column 7, :end-line 155, :end-column 19, :arglists (quote ([]))}, :name tabber.songViewer/CurrentChord, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ChordPreviewList {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 146, :column 7, :end-line 146, :end-column 23, :arglists (quote ([]))}, :name tabber.songViewer/ChordPreviewList, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, TempoButton {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 182, :column 7, :end-line 182, :end-column 18, :arglists (quote ([operator]))}, :name tabber.songViewer/TempoButton, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 18, :method-params ([operator]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 1, :fn-var true, :arglists (quote ([operator]))}, StartButton {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 172, :column 7, :end-line 172, :end-column 18, :arglists (quote ([]))}, :name tabber.songViewer/StartButton, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, StartBeatCounter {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 115, :column 7, :end-line 115, :end-column 23, :arglists (quote ([]))}, :name tabber.songViewer/StartBeatCounter, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, TempoDisplayStyle {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 80, :column 7, :end-line 80, :end-column 24, :arglists (quote ([]))}, :name tabber.songViewer/TempoDisplayStyle, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, TempoDisplay {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 186, :column 7, :end-line 186, :end-column 19, :arglists (quote ([]))}, :name tabber.songViewer/TempoDisplay, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 186, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, CurrentChordStyle {:name tabber.songViewer/CurrentChordStyle, :file "src/tabber/song-viewer.cljs", :line 27, :column 1, :end-line 27, :end-column 23, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/song-viewer.cljs", :line 27, :column 6, :end-line 27, :end-column 23}, :tag cljs.core/IMap}}, :cljs.spec/registry-ref [[:tabber.songViewer/songInfo (cljs.spec.alpha/tuple cljs.core/string? cljs.core/int? cljs.core/string?)]], :require-macros {s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha}, :cljs.analyzer/constants {:seen #{:beat :transform :f1 :color :songPlaying :index :bottom :disabled :button :top cljs.core/int? :overflow cljs.core/string? :t2 :width :background cljs.spec.alpha/tuple :marginTop :paddingLeft :on-click :style :tabber.songViewer/songInfo :div :justifyContent :id :padding :right :display :position :willChange :songTitle :fontSize :h1 :border :tempo :t1 :onClick :height :left :song :margin}, :order [:tabber.songViewer/songInfo cljs.spec.alpha/tuple cljs.core/string? cljs.core/int? :position :bottom :left :display :fontSize :transform :willChange :width :top :margin :color :t1 :right :height :padding :overflow :background :border :t2 :marginTop :justifyContent :songTitle :tempo :song :beat :index :div :style :id :paddingLeft :f1 :h1 :button :on-click :disabled :songPlaying :onClick]}, :doc nil}