{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name tabber.songViewer, :imports nil, :requires {reagent reagent.core, tabber.colorThemes tabber.colorThemes, tabber.chordChart tabber.chordChart, reagent.core reagent.core, color tabber.colorThemes, tabber.state tabber.state, state tabber.state, chart tabber.chordChart, str clojure.string, clojure.string clojure.string}, :uses {cursor reagent.core}, :defs {Tempo {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 101, :column 7, :end-line 101, :end-column 12, :arglists (quote ([]))}, :name tabber.songViewer/Tempo, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, TempoButtonStyle {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 70, :column 7, :end-line 70, :end-column 23, :arglists (quote ([]))}, :name tabber.songViewer/TempoButtonStyle, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, SongTitleStyle {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 53, :column 7, :end-line 53, :end-column 21, :arglists (quote ([]))}, :name tabber.songViewer/SongTitleStyle, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, StartButtonStyle {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 59, :column 7, :end-line 59, :end-column 23, :arglists (quote ([]))}, :name tabber.songViewer/StartButtonStyle, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, BeatCounterStyle {:name tabber.songViewer/BeatCounterStyle, :file "src/tabber/song-viewer.cljs", :line 25, :column 1, :end-line 25, :end-column 22, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 25, :column 6, :end-line 25, :end-column 22}}, !chords {:name tabber.songViewer/!chords, :file "src/tabber/song-viewer.cljs", :line 18, :column 1, :end-line 18, :end-column 13, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 18, :column 6, :end-line 18, :end-column 13}}, SongTitle {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 152, :column 7, :end-line 152, :end-column 16, :arglists (quote ([]))}, :name tabber.songViewer/SongTitle, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, !song {:name tabber.songViewer/!song, :file "src/tabber/song-viewer.cljs", :line 16, :column 1, :end-line 16, :end-column 11, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 16, :column 6, :end-line 16, :end-column 11}}, !index {:name tabber.songViewer/!index, :file "src/tabber/song-viewer.cljs", :line 15, :column 1, :end-line 15, :end-column 12, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 15, :column 6, :end-line 15, :end-column 12}}, GetReadyStyle {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 35, :column 7, :end-line 35, :end-column 20, :arglists (quote ([]))}, :name tabber.songViewer/GetReadyStyle, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, SongChordFilter {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 128, :column 7, :end-line 128, :end-column 22, :arglists (quote ([collection thisSong thisIndex]))}, :name tabber.songViewer/SongChordFilter, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 22, :method-params ([collection thisSong thisIndex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 3, :fn-var true, :arglists (quote ([collection thisSong thisIndex]))}, FormatSong {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 93, :column 7, :end-line 93, :end-column 17, :arglists (quote ([]))}, :name tabber.songViewer/FormatSong, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, OnDeckChordStyle {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 38, :column 7, :end-line 38, :end-column 23, :arglists (quote ([upper]))}, :name tabber.songViewer/OnDeckChordStyle, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 23, :method-params ([upper]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([upper]))}, BeatCounter {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 116, :column 7, :end-line 116, :end-column 18, :arglists (quote ([]))}, :name tabber.songViewer/BeatCounter, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, SongPage {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 169, :column 7, :end-line 169, :end-column 15, :arglists (quote ([]))}, :name tabber.songViewer/SongPage, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, OnDeckChord {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 146, :column 7, :end-line 146, :end-column 18, :arglists (quote ([num upper]))}, :name tabber.songViewer/OnDeckChord, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 18, :method-params ([num upper]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 2, :fn-var true, :arglists (quote ([num upper]))}, !tempo {:name tabber.songViewer/!tempo, :file "src/tabber/song-viewer.cljs", :line 17, :column 1, :end-line 17, :end-column 12, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 17, :column 6, :end-line 17, :end-column 12}}, ChordPreviewListStyle {:name tabber.songViewer/ChordPreviewListStyle, :file "src/tabber/song-viewer.cljs", :line 44, :column 1, :end-line 44, :end-column 27, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 44, :column 6, :end-line 44, :end-column 27}}, CurrentChord {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 140, :column 7, :end-line 140, :end-column 19, :arglists (quote ([]))}, :name tabber.songViewer/CurrentChord, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ChordPreviewList {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 132, :column 7, :end-line 132, :end-column 23, :arglists (quote ([]))}, :name tabber.songViewer/ChordPreviewList, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, TempoButton {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 160, :column 7, :end-line 160, :end-column 18, :arglists (quote ([operator]))}, :name tabber.songViewer/TempoButton, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 18, :method-params ([operator]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 1, :fn-var true, :arglists (quote ([operator]))}, !beat {:name tabber.songViewer/!beat, :file "src/tabber/song-viewer.cljs", :line 14, :column 1, :end-line 14, :end-column 11, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 14, :column 6, :end-line 14, :end-column 11}}, StartButton {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 156, :column 7, :end-line 156, :end-column 18, :arglists (quote ([]))}, :name tabber.songViewer/StartButton, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 156, :end-line 156, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, StartBeatCounter {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 106, :column 7, :end-line 106, :end-column 23, :arglists (quote ([]))}, :name tabber.songViewer/StartBeatCounter, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, TempoDisplayStyle {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 77, :column 7, :end-line 77, :end-column 24, :arglists (quote ([]))}, :name tabber.songViewer/TempoDisplayStyle, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, !rawSong {:name tabber.songViewer/!rawSong, :file "src/tabber/song-viewer.cljs", :line 19, :column 1, :end-line 19, :end-column 14, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 19, :column 6, :end-line 19, :end-column 14}}, TempoDisplay {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 163, :column 7, :end-line 163, :end-column 19, :arglists (quote ([]))}, :name tabber.songViewer/TempoDisplay, :variadic false, :file "src/tabber/song-viewer.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, CurrentChordStyle {:name tabber.songViewer/CurrentChordStyle, :file "src/tabber/song-viewer.cljs", :line 32, :column 1, :end-line 32, :end-column 23, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/song-viewer.cljs", :line 32, :column 6, :end-line 32, :end-column 23}}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:beat :transform :f1 :color :index :bottom :button :top :overflow :t2 :width :background :marginTop :paddingLeft :rawSong :on-click :style :div :justifyContent :padding :right :display :position :fontSize :chords :h1 :border :tempo :t1 :onClick :height :left :song :margin}, :order [:beat :index :song :tempo :chords :rawSong :position :bottom :left :display :fontSize :transform :width :top :margin :color :t1 :right :height :padding :overflow :background :border :marginTop :t2 :justifyContent :div :style :paddingLeft :f1 :h1 :button :on-click :onClick]}, :doc nil}