{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name tabber.state, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, str clojure.string, clojure.string clojure.string, chords tabber.chords, tabber.chords tabber.chords}, :uses {atom reagent.core}, :defs {InitSong {:name tabber.state/InitSong, :file "src/tabber/state.cljs", :line 7, :column 1, :end-line 7, :end-column 14, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/state.cljs", :line 7, :column 6, :end-line 7, :end-column 14}}, HeyJudeRaw {:name tabber.state/HeyJudeRaw, :file "src/tabber/state.cljs", :line 13, :column 1, :end-line 13, :end-column 16, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/state.cljs", :line 13, :column 6, :end-line 13, :end-column 16}}, app-state {:name tabber.state/app-state, :file "src/tabber/state.cljs", :line 18, :column 1, :end-line 18, :end-column 19, :meta {:file "/Users/Fed/Projects/Clojure/tabber/src/tabber/state.cljs", :line 18, :column 10, :end-line 18, :end-column 19}}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:currentPage :beat :showModal :key :index :colors :rawSong :quality :chords :tempo :song}, :order [:currentPage :beat :showModal :key :index :colors :rawSong :quality :chords :tempo :song]}, :doc nil}