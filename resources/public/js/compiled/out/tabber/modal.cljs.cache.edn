{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name tabber.modal, :imports nil, :requires {state tabber.state, tabber.state tabber.state, songs tabber.songs, tabber.songs tabber.songs, songViewer tabber.songViewer, tabber.songViewer tabber.songViewer, color tabber.colorThemes, tabber.colorThemes tabber.colorThemes}, :cljs.spec/speced-vars [], :uses nil, :defs {ThemeSelect {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :line 85, :column 7, :end-line 85, :end-column 18, :arglists (quote ([]))}, :name tabber.modal/ThemeSelect, :variadic false, :file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, Modal {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :line 116, :column 7, :end-line 116, :end-column 12, :arglists (quote ([]))}, :name tabber.modal/Modal, :variadic false, :file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ModalIcon {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :line 74, :column 7, :end-line 74, :end-column 16, :arglists (quote ([]))}, :name tabber.modal/ModalIcon, :variadic false, :file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, SelectNewTheme {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :line 81, :column 7, :end-line 81, :end-column 21, :arglists (quote ([theme]))}, :name tabber.modal/SelectNewTheme, :variadic false, :file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :end-column 21, :method-params ([theme]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([theme]))}, PageSelector {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :line 109, :column 7, :end-line 109, :end-column 19, :arglists (quote ([page]))}, :name tabber.modal/PageSelector, :variadic false, :file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :end-column 19, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, SelectNewSong {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :line 97, :column 7, :end-line 97, :end-column 20, :arglists (quote ([title]))}, :name tabber.modal/SelectNewSong, :variadic false, :file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :end-column 20, :method-params ([title]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([title]))}, SongSelect {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :line 102, :column 7, :end-line 102, :end-column 17, :arglists (quote ([]))}, :name tabber.modal/SongSelect, :variadic false, :file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ThemeSelectItemStyle {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :line 37, :column 7, :end-line 37, :end-column 27, :arglists (quote ([item]))}, :name tabber.modal/ThemeSelectItemStyle, :variadic false, :file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :end-column 27, :method-params ([item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([item]))}, ModalIconHRStyle {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :line 21, :column 7, :end-line 21, :end-column 23, :arglists (quote ([]))}, :name tabber.modal/ModalIconHRStyle, :variadic false, :file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, SongSelectItemStyle {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :line 51, :column 7, :end-line 51, :end-column 26, :arglists (quote ([item]))}, :name tabber.modal/SongSelectItemStyle, :variadic false, :file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :end-column 26, :method-params ([item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([item]))}, ThemeSelectStyle {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :line 27, :column 7, :end-line 27, :end-column 23, :arglists (quote ([]))}, :name tabber.modal/ThemeSelectStyle, :variadic false, :file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ModalIconStyle {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :line 11, :column 7, :end-line 11, :end-column 21, :arglists (quote ([]))}, :name tabber.modal/ModalIconStyle, :variadic false, :file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, SongSelectStyle {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :line 42, :column 7, :end-line 42, :end-column 22, :arglists (quote ([]))}, :name tabber.modal/SongSelectStyle, :variadic false, :file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ModalStyle {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :line 56, :column 7, :end-line 56, :end-column 17, :arglists (quote ([]))}, :name tabber.modal/ModalStyle, :variadic false, :file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, GrabSongByTitle {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :line 94, :column 7, :end-line 94, :end-column 22, :arglists (quote ([title]))}, :name tabber.modal/GrabSongByTitle, :variadic false, :file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :end-column 22, :method-params ([title]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([title]))}, SongTitles {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :line 91, :column 7, :end-line 91, :end-column 17, :arglists (quote ([]))}, :name tabber.modal/SongTitles, :variadic false, :file "/Users/fedreg/Projects/ClojureChord/src/tabber/modal.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:currentPage :marginLeft :showModal :hr :transform :color :songPlaying :index :bottom :transition :top :paddingTop :t2 :width :cursor :colors :marginTop :on-click :style :div :f3 :opacity :id :padding :zIndex :right :position :fontSize :border :backgroundColor :t1 :textDecoration :visibility :menu :height :span :margin}, :order [:position :top :right :width :transform :zIndex :transition :cursor :showModal :height :backgroundColor :border :marginTop :t1 :bottom :fontSize :color :padding :t2 :margin :f3 :visibility :marginLeft :paddingTop :opacity :menu :div :style :on-click :hr :colors :span :index :songPlaying :id :textDecoration :currentPage]}, :doc nil}