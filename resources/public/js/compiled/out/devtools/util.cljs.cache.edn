{:rename-macros {}, :renames {}, :externs {Error {}, console {info {apply {}}, warn {}}, goog {string {StringBuffer {prototype {append {}}}}}, setTimeout {}}, :use-macros {get-current-version devtools.version, oset devtools.util, oget devtools.util, ocall devtools.util}, :excludes #{}, :name devtools.util, :imports nil, :requires {prefs devtools.prefs, data clojure.data, devtools.version devtools.version, goog.userAgent goog.userAgent, cljs.pprint cljs.pprint, ua goog.userAgent, defaults devtools.defaults, devtools.context devtools.context, devtools.defaults devtools.defaults, clojure.data clojure.data, context devtools.context, devtools.prefs devtools.prefs}, :cljs.spec/speced-vars [], :uses {get-current-version devtools.version, pprint cljs.pprint}, :defs {lib-info-style {:name devtools.util/lib-info-style, :file "resources/public/js/compiled/out/devtools/util.cljs", :line 11, :column 1, :end-line 11, :end-column 20, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 11, :column 6, :end-line 11, :end-column 20}, :tag string}, under-advanced-build? {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 222, :column 7, :end-line 222, :end-column 28, :arglists (quote ([]))}, :name devtools.util/under-advanced-build?, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, convert-legacy-feature {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 197, :column 7, :end-line 197, :end-column 29, :arglists (quote ([feature]))}, :name devtools.util/convert-legacy-feature, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 29, :method-params ([feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 197, :end-line 197, :max-fixed-arity 1, :fn-var true, :arglists (quote ([feature]))}, advanced-build-explanation-url {:name devtools.util/advanced-build-explanation-url, :file "resources/public/js/compiled/out/devtools/util.cljs", :line 13, :column 1, :end-line 13, :end-column 36, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 13, :column 6, :end-line 13, :end-column 36}, :tag string}, in-node-context? {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 47, :column 17, :end-line 47, :end-column 33, :dynamic true, :arglists (quote ([]))}, :name devtools.util/in-node-context?, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 33, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 47, :end-line 47, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, display-banner-if-needed! {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 178, :column 7, :end-line 178, :end-column 32, :arglists (quote ([features-to-install feature-groups]))}, :name devtools.util/display-banner-if-needed!, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 32, :method-params ([features-to-install feature-groups]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 2, :fn-var true, :arglists (quote ([features-to-install feature-groups]))}, CustomFormattersDetector {:num-fields 0, :protocols #{}, :name devtools.util/CustomFormattersDetector, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 34, :type true, :column 10, :line 96, :record false, :end-line 96, :skip-protocol-flag nil}, make-version-info {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 22, :column 17, :end-line 22, :end-column 34, :dynamic true, :arglists (quote ([]))}, :name devtools.util/make-version-info, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 34, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 22, :end-line 22, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, *console-open* {:name devtools.util/*console-open*, :file "resources/public/js/compiled/out/devtools/util.cljs", :line 17, :column 1, :end-line 17, :end-column 30, :dynamic true, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 17, :column 16, :end-line 17, :end-column 30, :dynamic true}, :tag boolean}, *custom-formatters-active* {:name devtools.util/*custom-formatters-active*, :file "resources/public/js/compiled/out/devtools/util.cljs", :line 16, :column 1, :end-line 16, :end-column 42, :dynamic true, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 16, :column 16, :end-line 16, :end-column 42, :dynamic true}, :tag boolean}, get-node-info {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 33, :column 17, :end-line 33, :end-column 30, :dynamic true, :arglists (quote ([root]))}, :name devtools.util/get-node-info, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 30, :method-params ([root]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([root]))}, unknown-feature-msg {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 62, :column 17, :end-line 62, :end-column 36, :dynamic true, :arglists (quote ([feature known-features lib-info]))}, :name devtools.util/unknown-feature-msg, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 36, :method-params ([feature known-features lib-info]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 62, :end-line 62, :max-fixed-arity 3, :fn-var true, :arglists (quote ([feature known-features lib-info]))}, reset-style {:name devtools.util/reset-style, :file "resources/public/js/compiled/out/devtools/util.cljs", :line 12, :column 1, :end-line 12, :end-column 17, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 12, :column 6, :end-line 12, :end-column 17}, :tag string}, convert-legacy-features {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 203, :column 7, :end-line 203, :end-column 30, :arglists (quote ([features]))}, :name devtools.util/convert-legacy-features, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 30, :method-params ([features]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 203, :end-line 203, :max-fixed-arity 1, :fn-var true, :arglists (quote ([features]))}, install-detector! {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 108, :column 7, :end-line 108, :end-column 24, :arglists (quote ([detector]))}, :name devtools.util/install-detector!, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 24, :method-params ([detector]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 1, :fn-var true, :arglists (quote ([detector]))}, custom-formatters-not-active-msg {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 70, :column 17, :end-line 70, :end-column 49, :dynamic true, :arglists (quote ([]))}, :name devtools.util/custom-formatters-not-active-msg, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 49, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 70, :end-line 70, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, check-custom-formatters-active! {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 122, :column 7, :end-line 122, :end-column 38, :arglists (quote ([]))}, :name devtools.util/check-custom-formatters-active!, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 38, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, install-feature! {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 233, :column 7, :end-line 233, :end-column 23, :arglists (quote ([feature features-to-install available-fn install-fn]))}, :name devtools.util/install-feature!, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 23, :method-params ([feature features-to-install available-fn install-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 233, :end-line 233, :max-fixed-arity 4, :fn-var true, :arglists (quote ([feature features-to-install available-fn install-fn]))}, *custom-formatters-warning-reported* {:name devtools.util/*custom-formatters-warning-reported*, :file "resources/public/js/compiled/out/devtools/util.cljs", :line 18, :column 1, :end-line 18, :end-column 52, :dynamic true, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 18, :column 16, :end-line 18, :end-column 52, :dynamic true}, :tag boolean}, feature-list-display {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 165, :column 7, :end-line 165, :end-column 27, :arglists (quote ([installed-features feature-groups]))}, :name devtools.util/feature-list-display, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 27, :method-params ([installed-features feature-groups]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 2, :fn-var true, :arglists (quote ([installed-features feature-groups]))}, display-banner! {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 172, :column 7, :end-line 172, :end-column 22, :arglists (quote ([installed-features feature-groups fmt & params])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(installed-features feature-groups fmt params)], :arglists ([installed-features feature-groups fmt & params]), :arglists-meta (nil)}}, :name devtools.util/display-banner!, :variadic true, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(installed-features feature-groups fmt params)], :arglists ([installed-features feature-groups fmt & params]), :arglists-meta (nil)}, :method-params [(installed-features feature-groups fmt params)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 3, :fn-var true, :arglists ([installed-features feature-groups fmt & params])}, get-lib-info {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 28, :column 7, :end-line 28, :end-column 19, :arglists (quote ([]))}, :name devtools.util/get-lib-info, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, make-lib-info {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 25, :column 17, :end-line 25, :end-column 30, :dynamic true, :arglists (quote ([]))}, :name devtools.util/make-lib-info, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 25, :end-line 25, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, resolve-features! {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 212, :column 7, :end-line 212, :end-column 24, :arglists (quote ([features-desc feature-groups]))}, :name devtools.util/resolve-features!, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 24, :method-params ([features-desc feature-groups]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 2, :fn-var true, :arglists (quote ([features-desc feature-groups]))}, get-formatters-safe {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 78, :column 7, :end-line 78, :end-column 26, :arglists (quote ([]))}, :name devtools.util/get-formatters-safe, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, formatter-key {:name devtools.util/formatter-key, :file "resources/public/js/compiled/out/devtools/util.cljs", :line 76, :column 1, :end-line 76, :end-column 19, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 76, :column 6, :end-line 76, :end-column 19}, :tag string}, feature-for-display {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 161, :column 7, :end-line 161, :end-column 26, :arglists (quote ([installed-features feature]))}, :name devtools.util/feature-for-display, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 26, :method-params ([installed-features feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 2, :fn-var true, :arglists (quote ([installed-features feature]))}, print-config-overrides-if-requested! {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 88, :column 7, :end-line 88, :end-column 43, :arglists (quote ([msg]))}, :name devtools.util/print-config-overrides-if-requested!, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 43, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, is-known-feature? {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 194, :column 7, :end-line 194, :end-column 24, :arglists (quote ([known-features feature]))}, :name devtools.util/is-known-feature?, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 24, :method-params ([known-features feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 2, :fn-var true, :arglists (quote ([known-features feature]))}, set-formatters-safe! {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 84, :column 7, :end-line 84, :end-column 27, :arglists (quote ([new-formatters]))}, :name devtools.util/set-formatters-safe!, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 27, :method-params ([new-formatters]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([new-formatters]))}, make-detection-printer {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 133, :column 7, :end-line 133, :end-column 29, :arglists (quote ([]))}, :name devtools.util/make-detection-printer, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 29, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, wrap-with-custom-formatter-detection! {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 141, :column 7, :end-line 141, :end-column 44, :arglists (quote ([f]))}, :name devtools.util/wrap-with-custom-formatter-detection!, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 44, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, make-detector {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 99, :column 7, :end-line 99, :end-column 20, :arglists (quote ([]))}, :name devtools.util/make-detector, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ->CustomFormattersDetector {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 96, :column 10, :end-line 96, :end-column 34, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([]))}, :protocols #{}, :name devtools.util/->CustomFormattersDetector, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 34, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 96, :end-line 96, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :skip-protocol-flag nil}, feature-not-available-msg {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 66, :column 17, :end-line 66, :end-column 42, :dynamic true, :arglists (quote ([feature]))}, :name devtools.util/feature-not-available-msg, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 42, :method-params ([feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([feature]))}, get-node-description {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 44, :column 17, :end-line 44, :end-column 37, :dynamic true, :arglists (quote ([node-info]))}, :name devtools.util/get-node-description, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 37, :method-params ([node-info]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node-info]))}, get-js-context-description {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 52, :column 17, :end-line 52, :end-column 43, :dynamic true, :arglists (quote ([]))}, :name devtools.util/get-js-context-description, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 43, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 52, :end-line 52, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, uninstall-detector! {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 113, :column 7, :end-line 113, :end-column 26, :arglists (quote ([detector]))}, :name devtools.util/uninstall-detector!, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 26, :method-params ([detector]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 1, :fn-var true, :arglists (quote ([detector]))}, sanititze-features! {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 206, :column 7, :end-line 206, :end-column 26, :arglists (quote ([features feature-groups]))}, :name devtools.util/sanititze-features!, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 26, :method-params ([features feature-groups]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 206, :max-fixed-arity 2, :fn-var true, :arglists (quote ([features feature-groups]))}, report-unknown-features! {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 188, :column 7, :end-line 188, :end-column 31, :arglists (quote ([features known-features]))}, :name devtools.util/report-unknown-features!, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 31, :method-params ([features known-features]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 188, :end-line 188, :max-fixed-arity 2, :fn-var true, :arglists (quote ([features known-features]))}, display-advanced-build-warning-if-needed! {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 226, :column 7, :end-line 226, :end-column 48, :arglists (quote ([]))}, :name devtools.util/display-advanced-build-warning-if-needed!, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 48, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 226, :end-line 226, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, uninstall-detector-and-check-custom-formatters-active! {:protocol-inline nil, :meta {:file "/Users/fedreg/Projects/ClojureChord/resources/public/js/compiled/out/devtools/util.cljs", :line 128, :column 7, :end-line 128, :end-column 61, :arglists (quote ([detector]))}, :name devtools.util/uninstall-detector-and-check-custom-formatters-active!, :variadic false, :file "resources/public/js/compiled/out/devtools/util.cljs", :end-column 61, :method-params ([detector]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([detector]))}}, :cljs.spec/registry-ref [], :require-macros {devtools.util devtools.util, cljs.pprint cljs.pprint, devtools.version devtools.version, defaults devtools.defaults, devtools.defaults devtools.defaults, prefs devtools.prefs, devtools.prefs devtools.prefs}, :cljs.analyzer/constants {:seen #{:bypass-availability-checks :hints :formatters :dont-display-advanced-build-warning :else :default :all :dont-detect-custom-formatters :disable-advanced-mode-check :version :print-config-overrides :dont-display-banner :platform}, :order [:version :platform :print-config-overrides :dont-detect-custom-formatters :all :dont-display-banner :formatters :hints :default :else :disable-advanced-mode-check :dont-display-advanced-build-warning :bypass-availability-checks]}, :doc nil}