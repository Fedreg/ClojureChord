{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name devtools.hints, :imports nil, :requires {devtools.prefs devtools.prefs, context devtools.context, devtools.context devtools.context, stacktrace cljs.stacktrace, cljs.stacktrace cljs.stacktrace}, :uses {pref devtools.prefs}, :defs {mark-null-call-site-location {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 82, :column 7, :end-line 82, :end-column 35, :arglists (quote ([file line-number column]))}, :name devtools.hints/mark-null-call-site-location, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 35, :method-params ([file line-number column]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 3, :fn-var true, :arglists (quote ([file line-number column]))}, mark-call-closed-at-column {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 76, :column 7, :end-line 76, :end-column 33, :arglists (quote ([line column]))}, :name devtools.hints/mark-call-closed-at-column, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 33, :method-params ([line column]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([line column]))}, set-processed-errors! {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 40, :column 7, :end-line 40, :end-column 28, :arglists (quote ([val]))}, :name devtools.hints/set-processed-errors!, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 28, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, error-object-sense {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 95, :column 7, :end-line 95, :end-column 25, :arglists (quote ([error]))}, :name devtools.hints/error-object-sense, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 25, :method-params ([error]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([error]))}, *original-global-error-handler* {:name devtools.hints/*original-global-error-handler*, :file "resources/public/js/compiled/out/devtools/hints.cljs", :line 33, :column 1, :end-line 33, :end-column 47, :dynamic true, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 33, :column 16, :end-line 33, :end-column 47, :dynamic true}}, *installed* {:name devtools.hints/*installed*, :file "resources/public/js/compiled/out/devtools/hints.cljs", :line 32, :column 1, :end-line 32, :end-column 27, :dynamic true, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 32, :column 16, :end-line 32, :end-column 27, :dynamic true}}, *original-type-error-prototype-to-string* {:name devtools.hints/*original-type-error-prototype-to-string*, :file "resources/public/js/compiled/out/devtools/hints.cljs", :line 34, :column 1, :end-line 34, :end-column 57, :dynamic true, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 34, :column 16, :end-line 34, :end-column 57, :dynamic true}}, processed-errors {:name devtools.hints/processed-errors, :file "resources/public/js/compiled/out/devtools/hints.cljs", :line 36, :column 1, :end-line 36, :end-column 22, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 36, :column 6, :end-line 36, :end-column 22}}, global-error-handler {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 114, :column 7, :end-line 114, :end-column 27, :arglists (quote ([message url line column error]))}, :name devtools.hints/global-error-handler, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 27, :method-params ([message url line column error]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 5, :fn-var true, :arglists (quote ([message url line column error]))}, install! {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 135, :column 7, :end-line 135, :end-column 15, :arglists (quote ([]))}, :name devtools.hints/install!, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ajax-reader {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 54, :column 7, :end-line 54, :end-column 18, :arglists (quote ([url]))}, :name devtools.hints/ajax-reader, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 18, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, get-line {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 64, :column 7, :end-line 64, :end-column 15, :arglists (quote ([lines line-number]))}, :name devtools.hints/get-line, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 15, :method-params ([lines line-number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([lines line-number]))}, extend-content {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 67, :column 7, :end-line 67, :end-column 21, :arglists (quote ([content lines line-number min-length]))}, :name devtools.hints/extend-content, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 21, :method-params ([content lines line-number min-length]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 4, :fn-var true, :arglists (quote ([content lines line-number min-length]))}, retrieve-javascript-source {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 60, :column 7, :end-line 60, :end-column 33, :arglists (quote ([where]))}, :name devtools.hints/retrieve-javascript-source, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 33, :method-params ([where]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([where]))}, available? {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 6, :column 17, :end-line 6, :end-column 27, :dynamic true, :arglists (quote ([]))}, :name devtools.hints/available?, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, empty-as-nil {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 51, :column 7, :end-line 51, :end-column 19, :arglists (quote ([str]))}, :name devtools.hints/empty-as-nil, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 19, :method-params ([str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([str]))}, make-sense-of-the-error {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 90, :column 7, :end-line 90, :end-column 30, :arglists (quote ([message file line-number column]))}, :name devtools.hints/make-sense-of-the-error, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 30, :method-params ([message file line-number column]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 4, :fn-var true, :arglists (quote ([message file line-number column]))}, installed? {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 132, :column 7, :end-line 132, :end-column 17, :arglists (quote ([]))}, :name devtools.hints/installed?, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, type-error-to-string {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 106, :column 7, :end-line 106, :end-column 27, :arglists (quote ([self]))}, :name devtools.hints/type-error-to-string, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 27, :method-params ([self]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 1, :fn-var true, :arglists (quote ([self]))}, get-processed-errors! {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 43, :column 7, :end-line 43, :end-column 28, :arglists (quote ([]))}, :name devtools.hints/get-processed-errors!, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, uninstall! {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 141, :column 7, :end-line 141, :end-column 17, :arglists (quote ([]))}, :name devtools.hints/uninstall!, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, install-type-error-enhancer {:protocol-inline nil, :meta {:file "/Users/Fed/Projects/Clojure/tabber/resources/public/js/compiled/out/devtools/hints.cljs", :line 123, :column 7, :end-line 123, :end-column 34, :arglists (quote ([]))}, :name devtools.hints/install-type-error-enhancer, :variadic false, :file "resources/public/js/compiled/out/devtools/hints.cljs", :end-column 34, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {devtools.prefs devtools.prefs}, :cljs.analyzer/constants {:seen #{:asset-root :ua-product :else :sanity-hint-min-length :file :column :file-reader :line :chrome}, :order [:file-reader :sanity-hint-min-length :else :ua-product :chrome :asset-root :file :line :column]}, :doc nil}